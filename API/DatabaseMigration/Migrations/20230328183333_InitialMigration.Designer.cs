// <auto-generated />
using System;
using DatabaseMigration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseMigration.Migrations
{
    [DbContext(typeof(DrowsinessDetectionContext))]
    [Migration("20230328183333_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseMigration.Models.EmergencyContact", b =>
                {
                    b.Property<Guid>("EmergencyContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmergencyContactUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmergencyContactId");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("DatabaseMigration.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatabaseMigration.Models.UserEmergencyContact", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmergencyContactId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "EmergencyContactId");

                    b.HasIndex("EmergencyContactId");

                    b.ToTable("UserEmergencyContact");
                });

            modelBuilder.Entity("DatabaseMigration.Models.UserEmergencyContact", b =>
                {
                    b.HasOne("DatabaseMigration.Models.EmergencyContact", "EmergencyContact")
                        .WithMany("Users")
                        .HasForeignKey("EmergencyContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseMigration.Models.User", "User")
                        .WithMany("EmergencyContacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmergencyContact");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DatabaseMigration.Models.EmergencyContact", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DatabaseMigration.Models.User", b =>
                {
                    b.Navigation("EmergencyContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
